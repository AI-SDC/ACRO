[build-system]
requires = ["setuptools>=77"]
build-backend = "setuptools.build_meta"

[project]
name = "acro"
dynamic = ["version"]
description = "ACRO: Tools for the Semi-Automatic Checking of Research Outputs"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
maintainers = [
    {name = "Jim Smith", email = "james.smith@uwe.ac.uk"}
]
keywords = [
    "data-privacy",
    "data-protection",
    "privacy",
    "privacy-tools",
    "statistical-disclosure-control",
    "statistical-software",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
]
dependencies = [
    "lxml",
    "matplotlib",
    "numpy",
    "openpyxl",
    "pandas>=1.5.0,<2.3",
    "PyYAML",
    "statsmodels",
    "scipy<1.16.0",
]

[tool.setuptools.dynamic]
version = {attr = "acro.version.__version__"}

[project.urls]
"Homepage" = "https://github.com/AI-SDC/ACRO"
"Changelog" = "https://github.com/AI-SDC/ACRO/CHANGELOG.md"
"Documentation" = "https://ai-sdc.github.io/ACRO/"
"Bug Tracker" = "https://github.com/AI-SDC/ACRO/issues"
"Discussions" = "https://github.com/AI-SDC/ACRO/discussions"

[project.optional-dependencies]
doc = [
    "numpydoc",
    "pytest",
    "sphinx-autopackagesummary",
    "sphinx-gallery",
    "sphinx-issues",
    "sphinx-prompt",
    "sphinx-rtd-theme",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.setuptools]
zip-safe = false
include-package-data = true
packages = {find = {exclude = ["data*", "docs*", "notebooks*", "test*"]}}

[tool.setuptools.package-data]
"acro" = ["default.yaml"]

[tool.ruff]
indent-width = 4
line-length = 88
target-version = "py39"

lint.select = [
#  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
#  "C4",  # flake8-comprehensions
  "C90", # mccabe
  "D",   # pydocstyle
#  "DTZ", # flake8-datetimez
#  "E",   # pycodestyle
#  "EM",  # flake8-errmsg
#  "ERA", # eradicate
  "F",   # Pyflakes
  "I",   # isort
  "ICN",  # flake8-import-conventions
  "N",   # pep8-naming
#  "PD",  # pandas-vet
  "PGH", # pygrep-hooks
  "PIE",  # flake8-pie
#  "PL",  # Pylint
  "PLC", # Pylint
  "PLE", # Pylint
#  "PLR", # Pylint
#  "PLW", # Pylint
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
#  "RET", # flake8-return
  "RUF100",  # Ruff-specific
#  "S",   # flake8-bandit
#  "SIM", # flake8-simplify
#  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT",  # flake8-2020
]

exclude = [
  "__init__.py",
  "stata/*",
]

lint.ignore = [
#  "ANN101", # missing-type-self
#  "S301",   # unsafe pickle
]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["X", "X_train", "X_predict"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20

[tool.pylint]
master.py-version = "3.9"
reports.output-format = "colorized"

[tool.pylint.messages_control]
enable = [
    "useless-suppression",
]

disable = [
    "too-many-positional-arguments",
]

[tool.pylint.design]
max-args = 5  # Maximum number of arguments for function / method (see R0913).
max-attributes = 7  # Maximum number of attributes for a class (see R0902).
max-branches = 12  # Maximum number of branch for function / method body (see R0912).
max-locals = 15  # Maximum number of parents for a class (see R0914).
max-parents = 7  # Maximum number of parents for a class (see R0901).
max-public-methods = 20  # Maximum number of public methods for a class (see R0904).
max-returns = 6  # Maximum number of return / yield for function / method body (see R0911).
max-statements = 50  # Maximum number of statements in function / method body (see R0915).
min-public-methods = 2  # Minimum number of public methods for a class (see R0903).

[tool.pylint.format]
max-line-length = 100  # Maximum number of characters on a single line.
max-module-lines = 1000  # Maximum number of lines in a module.

[tool.mypy]
python_version = "3.9"
#exclude = "docs/source/conf.py"
#strict = false
#warn_unreachable = true
#ignore_missing_imports = true
#follow_imports = false
#disallow_untyped_defs = false
#disallow_untyped_calls = false
